Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/ayaulymalzhan/WebstormProjects/medbookapp/App.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _AuthService = require('./app/data/services/AuthService');

var _AuthService2 = _interopRequireDefault(_AuthService);

var _reactNavigation = require('react-navigation');

var _tutorial = require('./app/screens/tutorials/tutorial');

var _auth = require('./app/screens/auth/auth');

var _index3 = require('./app/screens/cabinet/index');

var _index4 = _interopRequireDefault(_index3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    App: {
        displayName: 'App'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/ayaulymalzhan/WebstormProjects/medbookapp/App.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

function getCurrentRouteName(navigationState) {
    if (!navigationState) {
        return null;
    }
    var route = navigationState.routes[navigationState.index];

    if (route.routes) {
        return getCurrentRouteName(route);
    }
    return route.routeName;
}

var App = _wrapComponent('App')(function (_Component) {
    _inherits(App, _Component);

    function App(props) {
        _classCallCheck(this, App);

        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

        _this.state = {
            isLoading: true,
            route: "Tutorials"
        };
        _this.getToken();
        return _this;
    }

    _createClass(App, [{
        key: 'getToken',
        value: function getToken() {
            var _this2 = this;

            return regeneratorRuntime.async(function getToken$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            _AuthService2.default.getAccessToken().then(function (response) {
                                _this2.setState({
                                    route: "Home",
                                    isLoading: false
                                });
                            }, function (e) {
                                _this2.setState({
                                    isLoading: false
                                });
                            });

                        case 1:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: 'render',
        value: function render() {
            var ThreeVA = (0, _reactNavigation.StackNavigator)({
                Tutorials: {
                    screen: _tutorial.Tutorial
                },
                Authorization: {
                    screen: _auth.Authorization
                },
                Home: {
                    screen: _index4.default
                }
            }, {
                headerMode: 'none',
                initialRouteName: this.state.route
            });
            return _react3.default.createElement(ThreeVA, {
                onNavigationStateChange: function onNavigationStateChange(prevState, currentState) {
                    var currentScreen = getCurrentRouteName(currentState);
                    var prevScreen = getCurrentRouteName(prevState);
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 60
                }
            });
        }
    }]);

    return App;
}(_react2.Component));

exports.default = App;