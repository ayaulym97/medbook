Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require("react");

var _react3 = _interopRequireDefault(_react2);

var _index = require("./../../react-transform-hmr/lib/index.js");

var _index2 = _interopRequireDefault(_index);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = "/Users/ayaulymalzhan/WebstormProjects/medbookapp/node_modules/react-native-calendar-strip/src/WeekSelector.js";

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactNative = require("react-native");

var _moment = require("moment");

var _moment2 = _interopRequireDefault(_moment);

var _CalendarStyle = require("./Calendar.style.js");

var _CalendarStyle2 = _interopRequireDefault(_CalendarStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  WeekSelector: {
    displayName: "WeekSelector"
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: "/Users/ayaulymalzhan/WebstormProjects/medbookapp/node_modules/react-native-calendar-strip/src/WeekSelector.js",
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var WeekSelector = _wrapComponent("WeekSelector")((_temp = _class = function (_Component) {
  _inherits(WeekSelector, _Component);

  function WeekSelector() {
    _classCallCheck(this, WeekSelector);

    return _possibleConstructorReturn(this, (WeekSelector.__proto__ || Object.getPrototypeOf(WeekSelector)).apply(this, arguments));
  }

  _createClass(WeekSelector, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      var _nextProps = _extends({}, nextProps);
      var _props = _extends({}, this.props);

      delete _nextProps.iconComponent;
      delete _props.iconComponent;

      return JSON.stringify(_props) !== JSON.stringify(_nextProps) || this.props.iconComponent !== nextProps.iconComponent;
    }
  }, {
    key: "isEnabled",
    value: function isEnabled(controlDate, weekStartDate, weekEndDate) {
      if (controlDate) {
        return !(0, _moment2.default)(controlDate).isBetween(weekStartDate, weekEndDate, "day", "[]");
      }
      return true;
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          controlDate = _props2.controlDate,
          iconContainerStyle = _props2.iconContainerStyle,
          iconComponent = _props2.iconComponent,
          iconInstanceStyle = _props2.iconInstanceStyle,
          iconStyle = _props2.iconStyle,
          imageSource = _props2.imageSource,
          onPress = _props2.onPress,
          weekEndDate = _props2.weekEndDate,
          weekStartDate = _props2.weekStartDate,
          size = _props2.size;


      var enabled = this.isEnabled(controlDate, weekStartDate, weekEndDate);
      var opacity = { opacity: enabled ? 1 : 0 };

      var component = void 0;
      if (_react3.default.isValidElement(iconComponent)) {
        component = _react3.default.cloneElement(iconComponent, {
          style: [iconComponent.props.style, { opacity: opacity.opacity }]
        });
      } else if (Array.isArray(iconComponent)) {
        component = iconComponent;
      } else {
        var imageSize = { width: size, height: size };
        component = _react3.default.createElement(_reactNative.Image, {
          style: [_CalendarStyle2.default.icon, imageSize, iconStyle, iconInstanceStyle, opacity],
          source: imageSource,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 83
          }
        });
      }

      return _react3.default.createElement(
        _reactNative.TouchableOpacity,
        {
          style: [_CalendarStyle2.default.iconContainer, iconContainerStyle],
          onPress: onPress,
          disabled: !enabled,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 91
          }
        },
        component
      );
    }
  }]);

  return WeekSelector;
}(_react2.Component), _class.propTypes = {
  controlDate: _propTypes2.default.object,
  iconComponent: _propTypes2.default.any,
  iconContainerStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  iconInstanceStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  iconStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),
  imageSource: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  onPress: _propTypes2.default.func,
  weekStartDate: _propTypes2.default.object,
  weekEndDate: _propTypes2.default.object
}, _temp));

exports.default = WeekSelector;